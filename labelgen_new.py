# -*- coding: utf-8 -*-
"""LabelGen.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1js8YIHObDfgVT7Hr3dKcIrWDUyK3nBPe
"""
from cmath import isnan
import sys
import pandas as pd
import json

def wce(r):  
    if isnan(r)== True:
        return float('nan') 
    elif r>=1.5 and r<=2:
        return 1
    else: 
        return 0  
"================================================"
def de(r):
  if isnan(r)== True:
    return float('nan')    
  elif r>=0.5 and r<=1.5:
    return 1
  else: 
    return 0 
"================================================"
def eps(r):
    if isnan(r)== True:
        return float('nan')  
    elif r>=1 and r<=99:
        return 1
    else: 
        return 0 
"================================================"
def pe(r):
    if isnan(r)== True:
        return float('nan')  
    elif r>13:
        return 1
    else: 
        return 0
"================================================"
def roe(r):
    if isnan(r)== True:
        return float('nan')  
    elif r>15:
        return 1
    else: 
        return 0
"================================================"
def ro40(r):
    if isnan(r)== True:
        return float('nan') 
    elif r>40:
        return 1
    else: 
        return 0
"================================================"
def market_cap(r):
    if isnan(r)== True:
        return float('nan')  
    elif r>2000000000:
        return 1
    else: 
        return 0
"================================================"
def growth_rate(r):
    if isnan(r)== True:
        return float('nan') 
    elif r>60:
        return 1
    else: 
        return 0
"================================================"
def profit_margin(r):
    if isnan(r)== True:
        return float('nan') 
    elif r>20:
        return 1
    else: 
        return 0
"================================================"
def gross_margin(r):
    if isnan(r)== True:
        return float('nan')  
    elif r>0.5:
        return 1
    else: 
        return 0
"================================================"
def magic_num(r):
    if isnan(r)== True:
        return float('nan')  
    elif r>1:
        return 1
    else: 
        return 0
"================================================"
def chun_rate(r):
    if isnan(r)== True:
        return float('nan') 
    elif r<1:
      return 1
    else: 
      return 0


"=============================================="